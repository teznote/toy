{"pathname":"/post/web-github-page-use-highlightjs-instead-of-rouge","cat":"/dev","title":"깃허브 페이지 하이라이터, Highlight.js 사용하고, 약간의 커스터마이징","description":"Jekyll 의 기본 하이라이터인 Rouge 대신 Highlight.js 사용 및 커스터마이징","updated":"2023-11-25","content":"<article><h1 id=\"page-title\">깃허브 페이지 하이라이터, Highlight.js 사용하고, 약간의 커스터마이징</h1><div><div id=\"page-description\">Jekyll 의 기본 하이라이터인 Rouge 대신 Highlight.js 사용 및 커스터마이징</div><div id=\"page-updated\">Last updated: 2023-11-25</div></div><div id=\"page-main\"><h2>2023-11-25 Update</h2><p>아래에서 <code>pseudo.js</code> 부분을 새롭게 업데이트 했다.</p><h2>하이라이터 변경</h2><p>깃허브 페이지의 기본 정적 웹페이지 제너레이터인 <a href=\"https://pages.github.com/\">Jekyll</a> 의 기본 코드 하이라이터는 <a href=\"http://rouge.jneen.net/\">Rouge</a> 다.</p><p>별 불편없이 사용하고 있었으나, Excel 관련 자료를 포스팅하려고 보니 Rouge 는 Excel 문법을 지원하지 않는다는 것을 알았다.</p><p>그래서 Excel 하이라이팅을 지원하는 <a href=\"https://highlightjs.org/\">Highlight.js</a> 로 바꿔보기로 하였다.</p><h2>Rouge 사용 중지 설정</h2><p>먼저 Rouge 사용을 하지 않도록 설정을 한다. 구글링해보면 방법을 쉽게 찾을 수 있는데, 아래 코드를 <code>_config.yml</code> 파일에 삽입했다.</p><pre><code class=\"language-yaml\"><div class=\"codeline\"><span class=\"hljs-comment\"># _config.yml</span></div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-attr\">markdown:</span> <span class=\"hljs-string\">kramdown</span></div><div class=\"codeline\"><span class=\"hljs-attr\">kramdown:</span></div><div class=\"codeline\">  <span class=\"hljs-attr\">syntax_highlighter_opts:</span></div><div class=\"codeline\">    <span class=\"hljs-attr\">disable:</span> <span class=\"hljs-literal\">true</span></div></code></pre><h2>Highlight.js 설치</h2><p>다음은 Highlight.js 를 설치한다. <code>_layouts</code> 폴더에 있는 <code>default.html</code> 파일에 아래 코드를 삽입했다. 가장 기본적인 설치법이기도 하다.</p><pre><code class=\"language-html\"><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- default.html --&gt;</span></div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- head 태그 제일 아래쪽에 삽입 --&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/styles/github.min.css&quot;</span>/&gt;</span></div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- body 태그 제일 아래쪽에 삽입 --&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/highlight.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/languages/excel.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/languages/vbnet.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\">  hljs.initHighlightingOnLoad();</div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div></code></pre><p>highlight.js 홈페이지를 살펴보면 설치법이 나와있다. 최신 버전은 11 이고, 이미 10 버전부터 IE11 지원이 되지 않는다. 아직은 우리나라의 IE 사용 비중이 높은 편이라 보기에, 버전 9 로 설치하였다.</p><p>Excel, 그리고 VBA 코드 하이라이팅을 위한 Visual Basic 은 디폴트 지원언어가 아니라서 별도의 랭귀지팩 (?) 을 추가로 삽입하였다.</p><p>이렇게 하고, 홈페이지를 새로고침해보면 기존의 포스팅을 수정할 필요도 없이 그대로 잘 작동하는 것을 확인할 수 있다. Excel 과 VBA 하이라이팅도 잘 작동한다.</p><h2>하이라이팅 코드에 줄번호 삽입</h2><p><a href=\"https://wcoder.github.io/highlightjs-line-numbers.js/\">플러그인</a> 을 사용하면 쉽게 적용할 수 있다. 개인적인 취향에는 안맞는 것 같아 적용해보았다가 바로 빼버렸다.</p><h2>Custom 스타일 적용</h2><p><a href=\"https://github.com/highlightjs/highlight.js/blob/main/LICENSE\">Highlight.js 라이센스</a>를 살펴보면, 사용자가 코드를 수정하여 사용하는 것을 허용하고 있다.</p><p>나만의 스타일을 적용해보고 싶어 CSS 파일을 새롭게 구성해 봤다. <a href=\"https://highlightjs.readthedocs.io/en/latest/theme-guide.html\">Highlight.js 도움말</a>을 살펴보면 스타일 수정 가이드를 볼 수 있지만, 기초적인 css 문법만 알고 있으면 굳이 도움말 없이도 수정이 가능하다.</p><p>수정한 내용을 <code>highlightjs-style.css</code> 파일로 저장했다.</p><h2>새로운 하이라이팅 규칙 만들기</h2><p>알고리즘 학습 포스팅에 pseudo 코드를 작성할 때가 있었는데, plaintext 로 하다보니 밋밋해서 스타일을 넣어보기로 했다.</p><p><a href=\"https://highlightjs.readthedocs.io/en/latest/language-guide.html\">Highlight.js 도움말</a>이나 제작자가 제공한 랭귀지팩 <a href=\"https://github.com/highlightjs/highlight.js/tree/9-18-stable/src/languages\">소스 코드</a>를 참고하여, 삽질을 해가면서 아래와 같이 만들어보았다.</p><pre><code class=\"language-javascript\"><div class=\"codeline\"><span class=\"hljs-comment\">// pseudo.js</span></div><div class=\"codeline\"> </div><div class=\"codeline\">hljs.<span class=\"hljs-title function_\">registerLanguage</span>(<span class=\"hljs-string\">&quot;pseudo&quot;</span>, <span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">hljs</span>) {</div><div class=\"codeline\">  <span class=\"hljs-keyword\">return</span> {</div><div class=\"codeline\">    <span class=\"hljs-attr\">aliases</span>: [<span class=\"hljs-string\">&#x27;ps&#x27;</span>],</div><div class=\"codeline\">    <span class=\"hljs-attr\">contains</span>: [</div><div class=\"codeline\">      {</div><div class=\"codeline\">        <span class=\"hljs-attr\">className</span>: <span class=\"hljs-string\">&#x27;comment&#x27;</span>,</div><div class=\"codeline\">        <span class=\"hljs-attr\">begin</span>: <span class=\"hljs-regexp\">/#/</span>,</div><div class=\"codeline\">        <span class=\"hljs-attr\">end</span>: <span class=\"hljs-regexp\">/\\s\\s|\\n|$/</span>,</div><div class=\"codeline\">      },</div><div class=\"codeline\">      {</div><div class=\"codeline\">        <span class=\"hljs-attr\">className</span>: <span class=\"hljs-string\">&#x27;strong&#x27;</span>,</div><div class=\"codeline\">        <span class=\"hljs-attr\">begin</span>: <span class=\"hljs-regexp\">/\\b[A-Z][A-Z0-9]*\\b/</span>,</div><div class=\"codeline\">      },</div><div class=\"codeline\">      {</div><div class=\"codeline\">        <span class=\"hljs-attr\">className</span>: <span class=\"hljs-string\">&#x27;number&#x27;</span>,</div><div class=\"codeline\">        <span class=\"hljs-attr\">begin</span>: <span class=\"hljs-regexp\">/\\b[0-9]+\\b/</span>,</div><div class=\"codeline\">      },</div><div class=\"codeline\">      {</div><div class=\"codeline\">        <span class=\"hljs-attr\">className</span>: <span class=\"hljs-string\">&#x27;leadline&#x27;</span>,</div><div class=\"codeline\">        <span class=\"hljs-attr\">begin</span>: <span class=\"hljs-regexp\">/[─│┌┐┘└├┬┤┴┼←↑→↓]+/</span>,</div><div class=\"codeline\">      },</div><div class=\"codeline\">    ],</div><div class=\"codeline\">  };</div><div class=\"codeline\">});</div></code></pre><p>아주 간단한 것만 적용했다. 순서대로 살펴보면 우선 &quot;pseudo&quot; 라고 명명했다. 나중에 포스팅할 때 마크다운에서는 {% raw %}<code>```pseudo</code>{% endraw %} 로 시작하면 적용된다.</p><p>크게 strong, number, leadline, comment 를 판단하여 스타일링 하도록 했다. begin, end 속성에 정규식을 사용했는데 그 의미는 쉽게 이해할 거라 생각한다.</p><p>leadline 은 원래 Highlight.js 에서 디폴트로 적용되는 클래스명이 아니지만 이렇게 별도로 지정할 수 있다. css 파일에 <code>.hljs-leadline{ ... }</code> 와 같은 식으로 추가하면 된다.</p><p>위 코드를 pseudo.js 파일로 저장했다.</p><h2>최종 설치 코드</h2><pre><code class=\"language-html\"><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- default.html --&gt;</span></div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- head 태그 제일 아래쪽에 삽입 --&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">link</span> <span class=\"hljs-attr\">rel</span>=<span class=\"hljs-string\">&quot;stylesheet&quot;</span> <span class=\"hljs-attr\">href</span>=<span class=\"hljs-string\">&quot;/css/highlightjs-style.css&quot;</span>/&gt;</span></div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-comment\">&lt;!-- body 태그 제일 아래쪽에 삽입 --&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/highlight.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/languages/excel.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.3/languages/vbnet.min.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span> <span class=\"hljs-attr\">src</span>=<span class=\"hljs-string\">&quot;/js/pseudo.js&quot;</span>&gt;</span><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">script</span>&gt;</span></div><div class=\"codeline\">  hljs.initHighlightingOnLoad();</div><div class=\"codeline\"><span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">script</span>&gt;</span></div></code></pre><p>{:.html}</p><h2>사용 예시</h2><p>아래는 커스터마이징 한 pseudo 코드가 어떻게 하이라이팅이 되는지 실제로 적용해 본 예시다.</p><pre><code class=\"language-pseudo\"><div class=\"codeline\"><span class=\"hljs-comment\"># 연결리스트 예시</span></div><div class=\"codeline\">head</div><div class=\"codeline\">│  └ <span class=\"hljs-comment\"># 가장 첫 NODE 를 참조하는 변수</span></div><div class=\"codeline\">│    </div><div class=\"codeline\">↓</div><div class=\"codeline\"><span class=\"hljs-strong\">NODE</span>      ┌───→ <span class=\"hljs-strong\">NODE</span>      ┌───→ <span class=\"hljs-strong\">NODE</span></div><div class=\"codeline\">├ val=<span class=\"hljs-number\">1</span>   │     ├ val=<span class=\"hljs-number\">2</span>   │     ├ val=<span class=\"hljs-number\">3</span></div><div class=\"codeline\">└ next ───┘     └ next ───┘     └ next ───→ None</div><div class=\"codeline\"> </div><div class=\"codeline\"><span class=\"hljs-comment\"># Fibonacci 수열</span></div><div class=\"codeline\">초기값: f(<span class=\"hljs-number\">0</span>) = <span class=\"hljs-number\">0</span>, f(<span class=\"hljs-number\">1</span>) = <span class=\"hljs-number\">1</span></div><div class=\"codeline\">일반항: f(i) = f(i <span class=\"hljs-leadline\">-</span> <span class=\"hljs-number\">2</span>) <span class=\"hljs-leadline\">+</span> f(i <span class=\"hljs-leadline\">-</span> <span class=\"hljs-number\">1</span>)</div></code></pre></div></article>"}
